// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostAccountsReader is a Reader for the PostAccounts structure.
type PostAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostAccountsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostAccountsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /accounts] PostAccounts", response, response.Code())
	}
}

// NewPostAccountsCreated creates a PostAccountsCreated with default headers values
func NewPostAccountsCreated() *PostAccountsCreated {
	return &PostAccountsCreated{}
}

/*
PostAccountsCreated describes a response with status code 201, with default header values.

Account Details
*/
type PostAccountsCreated struct {
	AccessControlAllowHeaders string
	AccessControlAllowMethods string
	AccessControlAllowOrigin  string
}

// IsSuccess returns true when this post accounts created response has a 2xx status code
func (o *PostAccountsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post accounts created response has a 3xx status code
func (o *PostAccountsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post accounts created response has a 4xx status code
func (o *PostAccountsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post accounts created response has a 5xx status code
func (o *PostAccountsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post accounts created response a status code equal to that given
func (o *PostAccountsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post accounts created response
func (o *PostAccountsCreated) Code() int {
	return 201
}

func (o *PostAccountsCreated) Error() string {
	return fmt.Sprintf("[POST /accounts][%d] postAccountsCreated", 201)
}

func (o *PostAccountsCreated) String() string {
	return fmt.Sprintf("[POST /accounts][%d] postAccountsCreated", 201)
}

func (o *PostAccountsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Access-Control-Allow-Headers
	hdrAccessControlAllowHeaders := response.GetHeader("Access-Control-Allow-Headers")

	if hdrAccessControlAllowHeaders != "" {
		o.AccessControlAllowHeaders = hdrAccessControlAllowHeaders
	}

	// hydrates response header Access-Control-Allow-Methods
	hdrAccessControlAllowMethods := response.GetHeader("Access-Control-Allow-Methods")

	if hdrAccessControlAllowMethods != "" {
		o.AccessControlAllowMethods = hdrAccessControlAllowMethods
	}

	// hydrates response header Access-Control-Allow-Origin
	hdrAccessControlAllowOrigin := response.GetHeader("Access-Control-Allow-Origin")

	if hdrAccessControlAllowOrigin != "" {
		o.AccessControlAllowOrigin = hdrAccessControlAllowOrigin
	}

	return nil
}

// NewPostAccountsForbidden creates a PostAccountsForbidden with default headers values
func NewPostAccountsForbidden() *PostAccountsForbidden {
	return &PostAccountsForbidden{}
}

/*
PostAccountsForbidden describes a response with status code 403, with default header values.

Failed to authenticate request
*/
type PostAccountsForbidden struct {
}

// IsSuccess returns true when this post accounts forbidden response has a 2xx status code
func (o *PostAccountsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post accounts forbidden response has a 3xx status code
func (o *PostAccountsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post accounts forbidden response has a 4xx status code
func (o *PostAccountsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post accounts forbidden response has a 5xx status code
func (o *PostAccountsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post accounts forbidden response a status code equal to that given
func (o *PostAccountsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post accounts forbidden response
func (o *PostAccountsForbidden) Code() int {
	return 403
}

func (o *PostAccountsForbidden) Error() string {
	return fmt.Sprintf("[POST /accounts][%d] postAccountsForbidden", 403)
}

func (o *PostAccountsForbidden) String() string {
	return fmt.Sprintf("[POST /accounts][%d] postAccountsForbidden", 403)
}

func (o *PostAccountsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PostAccountsBody post accounts body
swagger:model PostAccountsBody
*/
type PostAccountsBody struct {

	// ARN for an IAM role within this AWS account. The DCE master account will assume this IAM role to execute operations within this AWS account. This IAM role is configured by the client, and must be configured with [a Trust Relationship with the DCE master account.](/https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)
	//
	// Required: true
	AdminRoleArn *string `json:"adminRoleArn"`

	// AWS Account ID
	// Required: true
	ID *string `json:"id"`

	// Arbitrary metadata to attach to the account object.
	Metadata interface{} `json:"metadata,omitempty"`
}

// Validate validates this post accounts body
func (o *PostAccountsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAdminRoleArn(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostAccountsBody) validateAdminRoleArn(formats strfmt.Registry) error {

	if err := validate.Required("account"+"."+"adminRoleArn", "body", o.AdminRoleArn); err != nil {
		return err
	}

	return nil
}

func (o *PostAccountsBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("account"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post accounts body based on context it is used
func (o *PostAccountsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAccountsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAccountsBody) UnmarshalBinary(b []byte) error {
	var res PostAccountsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
