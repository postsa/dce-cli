// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutAccountsIDReader is a Reader for the PutAccountsID structure.
type PutAccountsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAccountsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAccountsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPutAccountsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /accounts/{id}] PutAccountsID", response, response.Code())
	}
}

// NewPutAccountsIDOK creates a PutAccountsIDOK with default headers values
func NewPutAccountsIDOK() *PutAccountsIDOK {
	return &PutAccountsIDOK{}
}

/*
PutAccountsIDOK describes a response with status code 200, with default header values.

Account Details
*/
type PutAccountsIDOK struct {
	AccessControlAllowHeaders string
	AccessControlAllowMethods string
	AccessControlAllowOrigin  string
}

// IsSuccess returns true when this put accounts Id o k response has a 2xx status code
func (o *PutAccountsIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put accounts Id o k response has a 3xx status code
func (o *PutAccountsIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put accounts Id o k response has a 4xx status code
func (o *PutAccountsIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put accounts Id o k response has a 5xx status code
func (o *PutAccountsIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put accounts Id o k response a status code equal to that given
func (o *PutAccountsIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put accounts Id o k response
func (o *PutAccountsIDOK) Code() int {
	return 200
}

func (o *PutAccountsIDOK) Error() string {
	return fmt.Sprintf("[PUT /accounts/{id}][%d] putAccountsIdOK", 200)
}

func (o *PutAccountsIDOK) String() string {
	return fmt.Sprintf("[PUT /accounts/{id}][%d] putAccountsIdOK", 200)
}

func (o *PutAccountsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Access-Control-Allow-Headers
	hdrAccessControlAllowHeaders := response.GetHeader("Access-Control-Allow-Headers")

	if hdrAccessControlAllowHeaders != "" {
		o.AccessControlAllowHeaders = hdrAccessControlAllowHeaders
	}

	// hydrates response header Access-Control-Allow-Methods
	hdrAccessControlAllowMethods := response.GetHeader("Access-Control-Allow-Methods")

	if hdrAccessControlAllowMethods != "" {
		o.AccessControlAllowMethods = hdrAccessControlAllowMethods
	}

	// hydrates response header Access-Control-Allow-Origin
	hdrAccessControlAllowOrigin := response.GetHeader("Access-Control-Allow-Origin")

	if hdrAccessControlAllowOrigin != "" {
		o.AccessControlAllowOrigin = hdrAccessControlAllowOrigin
	}

	return nil
}

// NewPutAccountsIDForbidden creates a PutAccountsIDForbidden with default headers values
func NewPutAccountsIDForbidden() *PutAccountsIDForbidden {
	return &PutAccountsIDForbidden{}
}

/*
PutAccountsIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutAccountsIDForbidden struct {
}

// IsSuccess returns true when this put accounts Id forbidden response has a 2xx status code
func (o *PutAccountsIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put accounts Id forbidden response has a 3xx status code
func (o *PutAccountsIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put accounts Id forbidden response has a 4xx status code
func (o *PutAccountsIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put accounts Id forbidden response has a 5xx status code
func (o *PutAccountsIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put accounts Id forbidden response a status code equal to that given
func (o *PutAccountsIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put accounts Id forbidden response
func (o *PutAccountsIDForbidden) Code() int {
	return 403
}

func (o *PutAccountsIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /accounts/{id}][%d] putAccountsIdForbidden", 403)
}

func (o *PutAccountsIDForbidden) String() string {
	return fmt.Sprintf("[PUT /accounts/{id}][%d] putAccountsIdForbidden", 403)
}

func (o *PutAccountsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PutAccountsIDBody put accounts ID body
swagger:model PutAccountsIDBody
*/
type PutAccountsIDBody struct {

	// ARN for an IAM role within this AWS account. The DCE master account will assume this IAM role to execute operations within this AWS account. This IAM role is configured by the client, and must be configured with [a Trust Relationship with the DCE master account.](/https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)
	//
	AdminRoleArn string `json:"adminRoleArn,omitempty"`

	// Arbitrary metadata to attach to the account object.
	Metadata interface{} `json:"metadata,omitempty"`
}

// Validate validates this put accounts ID body
func (o *PutAccountsIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this put accounts ID body based on context it is used
func (o *PutAccountsIDBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutAccountsIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutAccountsIDBody) UnmarshalBinary(b []byte) error {
	var res PutAccountsIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
