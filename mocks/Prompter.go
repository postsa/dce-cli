// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Prompter is an autogenerated mock type for the Prompter type
type Prompter struct {
	mock.Mock
}

// PromptBasic provides a mock function with given fields: label, validator
func (_m *Prompter) PromptBasic(label string, validator func(string) error) *string {
	ret := _m.Called(label, validator)

	if len(ret) == 0 {
		panic("no return value specified for PromptBasic")
	}

	var r0 *string
	if rf, ok := ret.Get(0).(func(string, func(string) error) *string); ok {
		r0 = rf(label, validator)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	return r0
}

// NewPrompter creates a new instance of Prompter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPrompter(t interface {
	mock.TestingT
	Cleanup(func())
}) *Prompter {
	mock := &Prompter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
